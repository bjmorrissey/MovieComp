{"version":3,"sources":["components/Header.js","components/MovieSelection.js","components/ChoiceArea.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","MovieSelection","props","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","adjEarnings","format","title","src","poster","alt","year","undefined","earnings","ChoiceArea","useState","movieOne","setMovieOne","movieTwo","setMovieTwo","movieOneAdjEarnings","setMovieOneAdjEarnings","movieTwoAdjEarnings","setMovieTwoAdjEarnings","movieOneInfo","setMovieOneInfo","movieTwoInfo","setMovieTwoInfo","mainOne","e","a","preventDefault","pullMovie","console","log","useEffect","convertEarnings","convertEarnings2","apiKey","process","replaceAll","replace","title1","title2","urlOne","urlTwo","fetch","response","json","data","Title","Year","Poster","BoxOffice","response2","data2","movie","startingAmount","Number","startingYear","url","formatAdjEarnings","adjustedValue","div","onSubmit","type","placeholder","value","onChange","target","one","two","oneInt","Math","floor","twoInt","suff","short","diff","toString","length","slice","winner","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40700612.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo\">\r\n      MovieComp\r\n      </div>\r\n      <div className=\"desc\">\r\n        It's easy, pick two movies, see which made more!\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Header;","import React, {useState} from 'react';\r\n\r\nconst MovieSelection = (props) => {\r\n\r\n  \r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2\r\n  })\r\n  \r\n  const formatAdjEarnings = props.adjEarnings === '' ? '' : formatter.format(props.adjEarnings)\r\n \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"movieSelection\">\r\n     \r\n        <div className=\"name\">{props.title}</div>\r\n        <div className=\"poster\">\r\n        <img src={props.poster} alt={props.title} />\r\n        </div>\r\n        <div className=\"moviedetails\">\r\n          <div className=\"year\">Released: \r\n            {props.year}\r\n          </div>\r\n          <div className=\"revenue\">Box Office: {props.earnings === undefined ? `Not reported` : props.earnings}</div>\r\n          <div className=\"calcRev\">Today's earnings:<br/> {props.adjEarnings}</div>\r\n          </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default MovieSelection;","import React, { useState, useEffect } from \"react\";\r\nimport MovieSelection from \"./MovieSelection\";\r\n\r\n\r\nconst ChoiceArea = () => {\r\n\r\n  const [movieOne, setMovieOne] = useState('')\r\n  const [movieTwo, setMovieTwo] = useState('')\r\n  const [movieOneAdjEarnings, setMovieOneAdjEarnings] = useState('')\r\n  const [movieTwoAdjEarnings, setMovieTwoAdjEarnings] = useState('')\r\n  const [movieOneInfo, setMovieOneInfo] = useState({\r\n    title: '',\r\n    year: '',\r\n    earnings: '',\r\n    poster: ''\r\n  })\r\n  const [movieTwoInfo, setMovieTwoInfo] = useState({\r\n    title: '',\r\n    year: '',\r\n    earnings: '',\r\n    poster: ''\r\n  })\r\n  \r\n  useEffect(() => {\r\n    convertEarnings(movieOneInfo)\r\n    convertEarnings2(movieTwoInfo)\r\n\r\n  }, [movieOneInfo, movieTwoInfo])\r\n\r\n \r\n    \r\n  async function mainOne(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const movieFetch = await pullMovie();\r\n      pullMovie();\r\n    } catch(err){\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const pullMovie = async () => {\r\n    let apiKey = process.env.REACT_APP_API_KEY;\r\n    apiKey = apiKey.replaceAll(\"'\", \"\").replace(';', '');\r\n\r\n    let title1 = movieOne.replaceAll(' ', '+')\r\n    let title2 = movieTwo.replaceAll(' ', '+')\r\n    let urlOne = `https://www.omdbapi.com/?t=${title1}&apikey=${apiKey}`\r\n    let urlTwo = `https://www.omdbapi.com/?t=${title2}&apikey=${apiKey}`\r\n\r\n    const response = await fetch(urlOne);\r\n    const data = await response.json();\r\n    console.log(data)\r\n    setMovieOneInfo({\r\n      title: data.Title,\r\n      year: data.Year,\r\n      poster: data.Poster,\r\n      earnings: data.BoxOffice\r\n    })\r\n    const response2 = await fetch(urlTwo);\r\n    \r\n    const data2 = await response2.json();\r\n    console.log(data2)\r\n    setMovieTwoInfo({\r\n      title: data2.Title,\r\n      year: data2.Year,\r\n      poster: data2.Poster,\r\n      earnings: data2.BoxOffice\r\n    })\r\n\r\n  }    \r\n     \r\n    \r\n\r\n  const convertEarnings = async (movie) => {\r\n    let startingAmount;\r\n    if (!movie.earnings) {\r\n      startingAmount = `0.00`\r\n    } else {\r\n      startingAmount = Number(movie.earnings.replace('$', '').replaceAll(',', ''));\r\n\r\n    }\r\n      \r\n      let startingYear = Number(movie.year);\r\n      let url= `https://cors-anywhere.herokuapp.com/https://inflation-api.herokuapp.com/api/?value=${startingAmount}&year=${startingYear}`\r\n      \r\n      // console.log(url)\r\n      let response  = await fetch(url);\r\n      let data = await response.json();\r\n      // console.log(data)\r\n\r\n      const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 2\r\n      })\r\n      \r\n      const formatAdjEarnings = formatter.format(data.response.adjustedValue)\r\n\r\n      setMovieOneAdjEarnings(formatAdjEarnings)\r\n\r\n      return movieOneAdjEarnings;\r\n      \r\n  }\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2\r\n  })\r\n  const convertEarnings2 = async (movie) => {\r\n    let startingAmount;\r\n    if (!movie.earnings) {\r\n      startingAmount = `0.00`\r\n    } else {\r\n      startingAmount = Number(movie.earnings.replace('$', '').replaceAll(',', ''));\r\n\r\n    }\r\n      \r\n      let startingYear = Number(movie.year);\r\n      let url= `https://cors-anywhere.herokuapp.com/https://inflation-api.herokuapp.com/api/?value=${startingAmount}&year=${startingYear}`\r\n      \r\n      // console.log(url)\r\n      let response  = await fetch(url);\r\n      let data = await response.json();\r\n      // console.log(data)\r\n\r\n     \r\n      \r\n      const formatAdjEarnings = formatter.format(data.response.adjustedValue)\r\n\r\n      setMovieTwoAdjEarnings(formatAdjEarnings)\r\n\r\n      return movieTwoAdjEarnings;\r\n      \r\n  }\r\n \r\n  const winner = (one, two) => {\r\n    let oneInt = Number(Math.floor(one.replace(\"$\", \"\").replaceAll(\",\", \"\")))\r\n    let twoInt = Number(Math.floor(two.replace(\"$\", \"\").replaceAll(\",\", \"\")))\r\n    let suff = ''\r\n    let short = ''\r\n\r\n    if (oneInt > twoInt) {\r\n      let diff = oneInt - twoInt;\r\n      \r\n      if (diff.toString().length > 6) {\r\n        suff=\" million\"\r\n        short = diff.toString().slice(0, diff.toString().length-6)\r\n        \r\n        console.log(short)\r\n        console.log(suff)\r\n      } else if (diff.toString().length > 3){\r\n        suff = ',000'\r\n        short = diff.toString().slice(0, diff.toString().length-3)\r\n        console.log(suff)\r\n      } else {\r\n        suff = '';\r\n      }\r\n\r\n      const bold = {\r\n        fontWeight: 'bold'\r\n      }\r\n\r\n      function boldTitle() {\r\n        return <div style={bold}>{movieOneInfo.title}</div>\r\n      }\r\n      \r\n      \r\n      \r\n      return `After inflation, ${movieOneInfo.title} brought in $${short}${suff} more income. `\r\n\r\n    } else {\r\n\r\n      let diff = twoInt - oneInt;\r\n      \r\n      if (diff.toString().length > 6) {\r\n        suff=\" million\"\r\n        short = diff.toString().slice(0, diff.toString().length-6)\r\n        \r\n      } else if (diff.toString().length > 3){\r\n        suff = ',000'\r\n        short = diff.toString().slice(0, diff.toString().length-3)\r\n      } else {\r\n        short = diff;\r\n        suff = '';\r\n      }\r\n      return `After inflation, ${movieTwoInfo.title} brought in $${short}${suff} more income. `\r\n    }\r\n\r\n  }\r\n \r\n\r\n \r\n\r\n  return (\r\n  <div className=\"choicearea\">\r\n    <div className=\"desc\">Welcome! This is a simple app - pick two movies and see how stand up to eachother to box office earnings after inflation is considered. This app is brought to you by the OMDB API & the inflation-app API. </div>\r\n    <div div className=\"title\">Choose two movies below</div>\r\n    <div className=\"moviebout\">\r\n      <div className=\"movie\">\r\n      <form onSubmit={mainOne}>\r\n      <input type='text' placeholder=\"Enter movie title\" value={movieOne} onChange={(e) => setMovieOne(e.target.value)}></input>\r\n      </form>\r\n      \r\n      <MovieSelection title={movieOneInfo.title} year={movieOneInfo.year} earnings={movieOneInfo.earnings} poster={movieOneInfo.poster} adjEarnings={movieOneAdjEarnings} />\r\n      </div>\r\n\r\n\r\n   \r\n      <div className=\"movie\">\r\n      <form onSubmit={mainOne}>\r\n      <input type='text' placeholder=\"Enter movie title\" value={movieTwo} onChange={(e) => setMovieTwo(e.target.value)}></input>\r\n      </form>\r\n      \r\n      {/* {moviePrintout()} */}\r\n      <MovieSelection title={movieTwoInfo.title} year={movieTwoInfo.year} earnings={movieTwoInfo.earnings} poster={movieTwoInfo.poster} adjEarnings={movieTwoAdjEarnings} /> \r\n      </div>\r\n \r\n\r\n    </div>\r\n    <div className=\"winner\">\r\n      {winner(movieOneAdjEarnings, movieTwoAdjEarnings)}\r\n    </div>\r\n  </div>\r\n  )\r\n\r\n  }\r\n\r\n\r\n\r\nexport default ChoiceArea;","import React from 'react';\r\nimport Header from './Header';\r\nimport ChoiceArea from './ChoiceArea';\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <ChoiceArea />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals';\nimport './scss/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}